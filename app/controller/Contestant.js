/*
 * File: app/controller/Contestant.js
 * Date: Tue Jan 24 2012 15:44:24 GMT-0600 (CST)
 *
 * This file was generated by Sencha Designer version 2.0.0.
 * http://www.sencha.com/products/designer/
 *
 * You should implement event handling and custom methods in this
 * class.
 */

Ext.define('MyApp.controller.Contestant', {
    extend: 'Ext.app.Controller',

    config: {
        models: [
            'Contestant'
        ],
        stores: [
            'Contestants'
        ],
        control: {
            "contestants button[ui=action]": {
                tap: 'addContestant'
            },
            "contestants button[ui=confirm]": {
                tap: 'callWinner'
            },
            "contestants button[ui=decline]": {
                tap: 'clearContestants'
            }
        }
    },

    addContestant: function(button, e, options) {
        var me = this;

        Ext.Msg.prompt(
        'Enter your name',
        'Please enter your name.',
        me.newContestant
        );
    },

    callWinner: function(button, e, options) {
        var contestantStore = Ext.data.StoreMgr.lookup('Contestants'),
            prizeStore      = Ext.data.StoreMgr.lookup('Prizes');

        if (contestantStore.getCount() < 1) {
            Ext.Msg.alert('Error', 'No more Contestants left!');
        }
        else if (prizeStore.getCount() < 1) {
            Ext.Msg.alert('Error', 'No more prizes left!');
        }
        else {
            var prize       = prizeStore.getAt(prizeStore.getCount()-1).get('Name'),
                winnerIndex = this.generateWinIndex(contestantStore),
                winner      = contestantStore.getAt(winnerIndex).get('Name');

            Ext.Msg.alert(
            'The winner is...',
            winner + ' has won the prize: ' + prize + '!'
            );

            contestantStore.removeAt(winnerIndex);
            contestantStore.sync();

            prizeStore.removeAt(prizeStore.getCount()-1);
            prizeStore.sync();
        }
    },

    clearContestants: function(button, e, options) {
        var contestantStore = Ext.data.StoreMgr.lookup('Contestants');

        contestantStore.removeAll();
        contestantStore.getProxy().clear();
    },

    generateWinIndex: function(contestantStore) {
        //TODO: Improve random number generator so that it never returns value of store.length
        return Math.floor(Math.random() * contestantStore.getCount());
    },

    newContestant: function(btn, name) {
        if (btn === 'cancel') { return false; }

        if (!name || typeof name !== 'string' || name === '') { return false; }

        var newContestant = new MyApp.model.Contestant({
            Name: name
        });

        var contestantStore = Ext.data.StoreMgr.lookup('Contestants');

        contestantStore.add(newContestant);
        contestantStore.sync();
    }

});